buildscript {
	ext.kotlin_version = '1.2.30'
 
    repositories {
        mavenCentral()
    }
    dependencies {
    	classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.2.RELEASE")
	    classpath("org.hidetake:gradle-ssh-plugin:2.2.0")
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

apply plugin: 'org.hidetake.ssh'

bootJar {
    baseName = 'chef-service'
    version =  '0.1.0'
}

bootWar {
    baseName = 'chef-service'    
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
    compile("org.postgresql:postgresql:42.2.5")
	compile("com.google.actions:actions-on-google:1.0.2") {
        exclude module : 'slf4j-log4j12'
    }
    testCompile("junit:junit")
}

remotes {
  webServer {
    host = '172.30.1.23'
    port = 22
    user = 'o2oadmin'
    identity = file('actions_service_key')
    knownHosts = allowAnyHosts
  }
}

task deploy {
	dependsOn 'bootWar'

	doLast {
		String path = bootWar.destinationDirectory.getAsFile().get();
		String filename = bootWar.archiveFileName.get();
		ssh.run {
			session(remotes.webServer) {
				execute ("sudo service tomcat stop")
				//execute ("rm -rf /opt/tomcat/webapps/chef)
				put from: "${path}/${filename}", into: './'
				//execute ("mkdir /opt/tomcat/webapps/chef")
				execute ("sudo chown tomcat ${filename}")
				execute ("sudo mv ${filename} /opt/tomcat/webapps/chef.war")
				execute ("sudo service tomcat start")
				//execute ("cd \$HOME; /usr/bin/pkill -f 'java -jar ${filename}'", ignoreError: true)
				//execute ("cd \$HOME; authbind --deep java -jar ${filename} < /dev/null > log/server_out.log 2> log/server_err.log & ")
			}
		}
  }
}

